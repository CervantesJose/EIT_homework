## Questions:
Q - What is the difference between var and let?
A - Let is a constant (immutable) while var is mutable

Q - What is an optional?
A - Used when unsure if var type is correct

Q - What is optional chaining vs optional binding?
A - Binding is when you use an if..else statement to safely unpack var. Chaining is calling properties on an optional that might be nil

Q - What are the different ways to unwrap an optional? How do they work? Are they safe?
A - During training we discussed 3 different ways to unwrap an optional.
	1. Optional binding: If..else where we use if to validate optional
	2. Force unwrap (!) when we are unsure of the value
	3. Nil-coalescing: using ?? Operator to validate optional

Q - What is a closure?
A - Self contained blocks of functionality that can be passed around and used within the code. Similar to lambdas in other languages.

Q - What is the difference between a class and a struct?
A - Structs and classes are very similar in that they both can define methods, properties and subscripts but classes have a little more functionality to them. Classes enables inheritance and type casting.

Q - What is the syntax '??' do?
A - ?? Is the nil-coalescing operator. If nil, run code to left, else right

Q - What is a tuple?
A - Tuples are groups of differing values. For example: var tuple = ("string", 401, 9.9)

Q - What is Any vs AnyObject?
A - Any refers to any instance of a class, struct, enum.. ANYthing really while AnyObject refers to any instance of classes only.

Q - What is a protocol?
A - Protocols are like templates for methods, properties, classes, structs, etc. that can then be used to implement a particular task or piece of functionality.

Q - What is Delegation?
A - Delegation is a software design pattern that focuses on handling table view events in a way that those views can talk to their owner without the fear of decoupling.